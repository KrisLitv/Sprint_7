{"name": "Проверка разных выборов цвета", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'id' in {'track': 348353}\n +  where {'track': 348353} = <bound method Response.json of <Response [201]>>()\n +    where <bound method Response.json of <Response [201]>> = <Response [201]>.json", "trace": "self = <test_order.TestLogin object at 0x000002F05B71AF30>, color = ([],)\n\n    @pytest.mark.parametrize('color',\n                             color_order_data)\n    @allure.title('Проверка разных выборов цвета')\n    def test_success_create_order_color(self, color):\n        payload = build_dictionary()\n        payload['color'] = color\n        response = requests.post(ORDER_URL, data=payload)\n        assert response.status_code == 201 # {'code': 500, 'message': 'values.map is not a function'}\n>       assert 'id' in response.json()  # Проверяем, что в ответе есть поле 'id'\nE       AssertionError: assert 'id' in {'track': 348353}\nE        +  where {'track': 348353} = <bound method Response.json of <Response [201]>>()\nE        +    where <bound method Response.json of <Response [201]>> = <Response [201]>.json\n\ntests\\test_order.py:19: AssertionError"}, "steps": [{"name": "Создаем словарь со случайно сгенерированными данными", "status": "passed", "start": 1716992132792, "stop": 1716992132974}], "parameters": [{"name": "color", "value": "([],)"}], "start": 1716992132792, "stop": 1716992134071, "uuid": "dd60536e-d2ba-46cf-a41e-b4ff5373ebcf", "historyId": "766c4735a4d52f7c73a04b1f642198ed", "testCaseId": "ec270ed4340d95304f4739ba1c945a1a", "fullName": "tests.test_order.TestLogin#test_success_create_order_color", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-8BB0DG15"}, {"name": "thread", "value": "14096-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}